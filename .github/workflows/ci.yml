name: CI-test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  run-test-chart:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - args: ""
          - args: "--verbose"
          - args: "--dry-run"
          - args: "--verbose --dry-run"

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Setup Python 3
        uses: actions/setup-python@v2.3.2
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt

      - name: Install helm-upgrade package
        run: |
          python -m pip install .

      - name: Run helm-upgrade
        working-directory: ./tests
        env:
          params: '{"binderhub": "https://raw.githubusercontent.com/jupyterhub/helm-chart/gh-pages/index.yaml", "nginx-ingress": "https://raw.githubusercontent.com/helm/charts/master/stable/nginx-ingress/Chart.yaml", "cert-manager": "https://github.com/jetstack/cert-manager/releases/latest"}'
        run: |
          helm-upgrade run test-chart '${{ env.params }}' ${{ matrix.args }}

  run-test-suite:
    runs-on: ubuntu-latest
    environment: codecov

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Setup Python 3
        uses: actions/setup-python@v2.3.2
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt

      - name: Install helm-upgrade package
        run: |
          python -m pip install .

      - name: Run tests
        run: |
          python -m coverage run -m pytest -vvv

      - name: Print coverage report
        run: |
          coverage report && coverage xml

      - name: "Upload coverage to Codecov"
        uses: codecov/codecov-action@v2
        with:
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}

