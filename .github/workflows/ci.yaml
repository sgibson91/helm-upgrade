name: CI Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  # Also run weekly, to make sure nothing has broken in the interim
  schedule:
    - cron: "0 0 * * 1"

jobs:
  run-test-chart:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Setup Python 3
        uses: actions/setup-python@v2.3.2
        with:
          python-version: "3.x"

      - name: Install the package
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry
          python -m poetry install --no-dev
        env:
          POETRY_VIRTUALENVS_CREATE: false

      - name: Run helm-upgrade
        working-directory: ./tests
        env:
          params: '{"binderhub": "https://raw.githubusercontent.com/jupyterhub/helm-chart/gh-pages/index.yaml", "nginx-ingress": "https://raw.githubusercontent.com/helm/charts/master/stable/nginx-ingress/Chart.yaml", "cert-manager": "https://github.com/jetstack/cert-manager/releases/latest"}'
        run: |
          python -m poetry run helm-upgrade test-chart/requirements.yaml '${{ env.params }}'

  run-test-suite:
    runs-on: ubuntu-latest
    environment: codecov
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10"]

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Setup Python ${{ matrix.python-verion }}
        uses: actions/setup-python@v2.3.2
        with:
          python-version: ${{ matrix.python-verion }}

      - name: Install the package
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry
          python -m poetry install
        env:
          POETRY_VIRTUALENVS_CREATE: false

      - name: Run tests and generate coverage report
        run: |
          python -m coverage run -m pytest -vvv && coverage xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}
